CREATE OR REPLACE VIEW FSM_AG_GIFTS AS

WITH CURRENT_FY AS
(SELECT CASE WHEN EXTRACT(MONTH FROM SYSDATE) >= 9
THEN EXTRACT(YEAR FROM SYSDATE)+1
ELSE EXTRACT(YEAR FROM SYSDATE)
END CFY
FROM DUAL
),

FY_START AS (
SELECT DISTINCT
FY,
"FY Start"
FROM DAY_NUMBERS
),

APP_SENDS AS (
SELECT DISTINCT
A.ID_NUMBER,
A.APPEAL_CODE AS "Appeal Code",
H.DESCRIPTION AS "Appeal Description",
CASE
  WHEN H.DESCRIPTION LIKE '%Leadership%' OR H.DESCRIPTION LIKE '%leadership%' OR H.DESCRIPTION LIKE '%LEADERSHIP%' THEN 'Leadership'
  WHEN H.DESCRIPTION LIKE '% PT %' OR H.DESCRIPTION LIKE '% PA %' OR H.DESCRIPTION LIKE '% GMER %' THEN 'Other'
  WHEN H.DESCRIPTION LIKE '%Faculty%' OR H.DESCRIPTION LIKE '%FACULTY%' OR H.DESCRIPTION LIKE '%faculty%' THEN 'Faculty'
ELSE 'MD' END AS "Appeal Category",
CASE
  WHEN H.DESCRIPTION LIKE '%Reunion%' OR H.DESCRIPTION LIKE '%REUNION%' OR H.DESCRIPTION LIKE '%reunion%' THEN 'Reunion'
  ELSE '' END AS "Appeal Subcategory",
CASE WHEN (SELECT MIN(TO_DATE(G.DATE_OF_RECORD_KEY,'YYYYMMDD')) FROM DM_ARD.FACT_GIVING_TRANS@catrackstobi G WHERE G.APPEAL_SID = AP.APPEAL_SID) IS NULL THEN H.DATE_ADDED ELSE
  (SELECT MIN(TO_DATE(G.DATE_OF_RECORD_KEY,'YYYYMMDD')) FROM DM_ARD.FACT_GIVING_TRANS@catrackstobi G WHERE G.APPEAL_SID = AP.APPEAL_SID) END AS "Appeal Date",
AP.APPEAL_SID
FROM ADVANCE.APPEALS A
LEFT OUTER JOIN ADVANCE.APPEAL_HEADER H ON A.APPEAL_CODE = H.APPEAL_CODE
LEFT OUTER JOIN DM_ARD.DIM_APPEAL@catrackstobi AP ON AP.APPEAL_CODE = A.APPEAL_CODE

WHERE
A.USER_GROUP = 'OO'
AND
A.APPEAL_YEAR >= '2020'
AND
H.CONTACT_ID_NUMBER IN (SELECT DISTINCT "ID Number" FROM FSM_HIERARCHY WHERE "Team" = 'Kuhn, Lawrence')
),

APP_SENDS_FY AS (
SELECT
APP_SENDS.*,
(SELECT CASE WHEN EXTRACT(MONTH FROM APP_SENDS."Appeal Date") >= 9
THEN EXTRACT(YEAR FROM APP_SENDS."Appeal Date")+1
ELSE EXTRACT(YEAR FROM APP_SENDS."Appeal Date")
END CFY
FROM DUAL) AS "Fiscal Year"
FROM APP_SENDS
),

GIFTS AS (
SELECT DISTINCT
A."Appeal Code",
A."Appeal Description",
A."Appeal Category",
A."Appeal Subcategory",
A.APPEAL_SID,
A."Appeal Date",
--A."Appeal Type",
G.ENTITY_ID_NUMBER,
G.TRANS_ID_NUMBER,
G.DATE_OF_RECORD_KEY AS "Gift Date",
G.NEW_GIFTS_AND_CMIT_AMT AS "Gift Amount",
A."Fiscal Year"
FROM DM_ARD.FACT_GIVING_TRANS@catrackstobi G
INNER JOIN APP_SENDS_FY A ON A.APPEAL_SID = G.APPEAL_SID

WHERE
G.NEW_GIFTS_AND_CMIT_AMT > 0
),

NOAPL AS (
SELECT DISTINCT
A."Appeal Code",
A."Appeal Description",
A."Appeal Category",
A."Appeal Subcategory",
AP.APPEAL_SID,
A."Appeal Date",
--A."Appeal Type",
G.ENTITY_ID_NUMBER,
G.TRANS_ID_NUMBER,
G.DATE_OF_RECORD_KEY AS "Gift Date",
G.NEW_GIFTS_AND_CMIT_AMT AS "Gift Amount",
--CASE WHEN G2.ENTITY_ID_NUMBER IS NOT NULL THEN G2.NEW_GIFTS_AND_CMIT_AMT ELSE G.NEW_GIFTS_AND_CMIT_AMT END AS "Gift Amount",
A."Fiscal Year"
FROM DM_ARD.FACT_GIVING_TRANS@catrackstobi G
INNER JOIN APP_SENDS_FY A ON A.ID_NUMBER = G.ENTITY_ID_NUMBER AND G.YEAR_OF_GIVING = A."Fiscal Year" AND TO_DATE(G.DATE_OF_RECORD_KEY,'YYYYMMDD') >= A."Appeal Date" 
INNER JOIN DM_ARD.DIM_APPEAL@catrackstobi AP ON AP.APPEAL_SID = G.APPEAL_SID
INNER JOIN DM_ARD.DIM_ALLOCATION@catrackstobi AL ON G.ALLOCATION_SID = AL.ALLOCATION_SID AND AL.CURRENT_INDICATOR = 'Y'
--LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G2 ON G.TRANS_ID_NUMBER = G2.TRANS_ID_NUMBER AND G2.GIFT_ASSOCIATED_SID = '3' AND G.GIFT_ASSOCIATED_SID <> '3'

WHERE
AP.APPEAL_CODE = 'NOAPL'
AND
G.NEW_GIFTS_AND_CMIT_AMT > 0
),

FTD AS (
SELECT DISTINCT
G.ENTITY_ID_NUMBER
FROM GIFTS G
LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G2 ON G.ENTITY_ID_NUMBER = G2.ENTITY_ID_NUMBER
     AND G2.NEW_GIFTS_AND_CMIT_AMT > 0 AND G2.REPORTING_AREA_SID = '21' AND TO_DATE(G2.DATE_OF_RECORD_KEY,'YYYYMMDD') < TO_DATE(G."Gift Date",'YYYYMMDD')

WHERE
G2.ENTITY_ID_NUMBER IS NULL
),


RD AS (
SELECT DISTINCT
G.ENTITY_ID_NUMBER
FROM GIFTS G
LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G2 ON G.ENTITY_ID_NUMBER = G2.ENTITY_ID_NUMBER
     AND G2.NEW_GIFTS_AND_CMIT_AMT > 0 AND G2.REPORTING_AREA_SID = '21'
     AND TO_DATE(G2.DATE_OF_RECORD_KEY,'YYYYMMDD') < TO_DATE(G."Gift Date",'YYYYMMDD')
     AND MONTHS_BETWEEN(TO_DATE(G."Gift Date",'YYYYMMDD'),TO_DATE(G2.DATE_OF_RECORD_KEY,'YYYYMMDD')) <= 60
LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G3 ON G.ENTITY_ID_NUMBER = G3.ENTITY_ID_NUMBER
     AND G3.NEW_GIFTS_AND_CMIT_AMT > 0 AND G3.REPORTING_AREA_SID = '21'
     AND TO_DATE(G3.DATE_OF_RECORD_KEY,'YYYYMMDD') < TO_DATE(G."Gift Date",'YYYYMMDD')
     AND MONTHS_BETWEEN(TO_DATE(G."Gift Date",'YYYYMMDD'),TO_DATE(G3.DATE_OF_RECORD_KEY,'YYYYMMDD')) > 60
     AND G2.ENTITY_ID_NUMBER IS NULL
WHERE
G3.ENTITY_ID_NUMBER IS NOT NULL
)

------APPEAL GIFTS
SELECT
G.ENTITY_ID_NUMBER,
G."Appeal Code",
G."Appeal Description",
G."Appeal Category",
G."Appeal Subcategory",
G.APPEAL_SID,
CASE WHEN G."Appeal Date" < FY_START."FY Start" THEN FY_START."FY Start" ELSE G."Appeal Date" END AS "Appeal Date",
--G."Appeal Type",
G.TRANS_ID_NUMBER,
G."Gift Date",
G."Gift Amount",
G."Fiscal Year",
CASE WHEN FTD.ENTITY_ID_NUMBER IS NOT NULL THEN 1 ELSE 0 END AS "First Time Donor",
CASE WHEN RD.ENTITY_ID_NUMBER IS NOT NULL THEN 1 ELSE 0 END AS "Reactivated Donor",
CASE WHEN G.ENTITY_ID_NUMBER IN (select GIFT_CLUB_ID_NUMBER from ADVANCE.GIFT_CLUBS t where gift_club_code = 'LFS' and gift_club_status = 'A' and school_Code = 'F1') THEN 1 ELSE 0 END AS "Founders Society Donor"
FROM GIFTS G
LEFT OUTER JOIN FY_START ON G."Fiscal Year" = FY_START.FY
LEFT OUTER JOIN FTD ON G.ENTITY_ID_NUMBER = FTD.ENTITY_ID_NUMBER
LEFT OUTER JOIN RD ON G.ENTITY_ID_NUMBER = RD.ENTITY_ID_NUMBER

UNION

------ APPEAL SENDS
SELECT
A.ID_NUMBER AS "ENTITY_ID_NUMBER",
A."Appeal Code",
A."Appeal Description",
A."Appeal Category",
A."Appeal Subcategory",
A.APPEAL_SID,
CASE WHEN A."Appeal Date" < FY_START."FY Start" THEN FY_START."FY Start" ELSE A."Appeal Date" END AS "Appeal Date",
--A."Appeal Type",
NULL AS "TRANS_ID_NUMBER",
NULL AS "Gift Date",
NULL AS "Gift Amount",
A."Fiscal Year",
0 AS "First Time Donor",
0 AS "Reactivated Donor",
0 AS "Founders Society Donor"
FROM APP_SENDS_FY A 
LEFT OUTER JOIN FY_START ON A."Fiscal Year" = FY_START.FY


UNION

------ NO APPEAL GIFTS
SELECT
N.ENTITY_ID_NUMBER,
N."Appeal Code",
N."Appeal Description",
N."Appeal Category",
N."Appeal Subcategory",
N.APPEAL_SID,
CASE WHEN N."Appeal Date" < FY_START."FY Start" THEN FY_START."FY Start" ELSE N."Appeal Date" END AS "Appeal Date",
--N."Appeal Type",
N.TRANS_ID_NUMBER,
N."Gift Date",
N."Gift Amount",
N."Fiscal Year",
0 AS "First Time Donor",
0 AS "Reactivated Donor",
0 AS "Founders Society Donor"
FROM NOAPL N
LEFT OUTER JOIN FY_START ON N."Fiscal Year" = FY_START.FY
;
