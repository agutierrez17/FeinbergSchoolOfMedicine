CREATE OR REPLACE VIEW RPT_RVA7647.FSM_GP_AG_GIFTS AS

WITH CURRENT_FY AS
(SELECT CASE WHEN EXTRACT(MONTH FROM SYSDATE) >= 9
THEN EXTRACT(YEAR FROM SYSDATE)+1
ELSE EXTRACT(YEAR FROM SYSDATE)
END CFY
FROM DUAL
),

APP_SENDS AS (
SELECT
A.FSM_ID,
A.ID_NUMBER,
AP.APPEAL_CODE AS "Appeal Code",
AP.DESCRIPTION AS "Appeal Description",
A.APPEAL_CTGRY AS "Appeal Category",
(SELECT MIN(TO_DATE(G.DATE_OF_RECORD_KEY,'YYYYMMDD')) FROM DM_ARD.FACT_GIVING_TRANS@catrackstobi G WHERE G.APPEAL_SID = AP.APPEAL_SID) AS "Appeal Date",
A.FISCAL_YEAR AS "Fiscal Year",
AP.APPEAL_SID
FROM FSM_GP_APPEAL_DATA A
INNER JOIN DM_ARD.DIM_APPEAL@catrackstobi AP ON AP.APPEAL_CODE = A.N_APPEAL_CODE 
),

GIFTS AS (
SELECT DISTINCT
A."Appeal Code",
A."Appeal Description",
A."Appeal Category",
A.APPEAL_SID,
A."Appeal Date",
G.ENTITY_ID_NUMBER,
G.TRANS_ID_NUMBER,
G.DATE_OF_RECORD_KEY AS "Gift Date",
G.NEW_GIFTS_AND_CMIT_AMT AS "Gift Amount",
G.YEAR_OF_GIVING AS "Fiscal Year"
FROM DM_ARD.FACT_GIVING_TRANS@catrackstobi G
--INNER JOIN CURRENT_FY ON G.YEAR_OF_GIVING = CURRENT_FY.CFY
INNER JOIN APP_SENDS A ON A.APPEAL_SID = G.APPEAL_SID

WHERE
G.NEW_GIFTS_AND_CMIT_AMT > 0
)
,

FTD AS (
SELECT DISTINCT
G.ENTITY_ID_NUMBER
FROM GIFTS G
LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G2 ON G.ENTITY_ID_NUMBER = G2.ENTITY_ID_NUMBER 
     AND G2.NEW_GIFTS_AND_CMIT_AMT > 0 AND G2.REPORTING_AREA_SID = '21' AND TO_DATE(G2.DATE_OF_RECORD_KEY,'YYYYMMDD') < TO_DATE(G."Gift Date",'YYYYMMDD')

WHERE
G2.ENTITY_ID_NUMBER IS NULL
),

RD AS (
SELECT DISTINCT
G.ENTITY_ID_NUMBER
FROM GIFTS G
LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G2 ON G.ENTITY_ID_NUMBER = G2.ENTITY_ID_NUMBER 
     AND G2.NEW_GIFTS_AND_CMIT_AMT > 0 AND G2.REPORTING_AREA_SID = '21' 
     AND TO_DATE(G2.DATE_OF_RECORD_KEY,'YYYYMMDD') < TO_DATE(G."Gift Date",'YYYYMMDD')
     AND MONTHS_BETWEEN(TO_DATE(G."Gift Date",'YYYYMMDD'),TO_DATE(G2.DATE_OF_RECORD_KEY,'YYYYMMDD')) <= 60
LEFT OUTER JOIN DM_ARD.FACT_GIVING_TRANS@catrackstobi G3 ON G.ENTITY_ID_NUMBER = G3.ENTITY_ID_NUMBER 
     AND G3.NEW_GIFTS_AND_CMIT_AMT > 0 AND G3.REPORTING_AREA_SID = '21' 
     AND TO_DATE(G3.DATE_OF_RECORD_KEY,'YYYYMMDD') < TO_DATE(G."Gift Date",'YYYYMMDD')
     AND MONTHS_BETWEEN(TO_DATE(G."Gift Date",'YYYYMMDD'),TO_DATE(G3.DATE_OF_RECORD_KEY,'YYYYMMDD')) > 60
     AND G2.ENTITY_ID_NUMBER IS NULL
WHERE
G3.ENTITY_ID_NUMBER IS NOT NULL
)


SELECT
A.FSM_ID,
G.ENTITY_ID_NUMBER,
CASE WHEN G.ENTITY_ID_NUMBER IS NOT NULL THEN G."Appeal Code" ELSE A."Appeal Code" END AS "Appeal Code",
CASE WHEN G.ENTITY_ID_NUMBER IS NOT NULL THEN G."Appeal Description" ELSE A."Appeal Description" END AS "Appeal Description",
CASE WHEN G.ENTITY_ID_NUMBER IS NOT NULL THEN G."Appeal Category" ELSE A."Appeal Category" END AS "Appeal Category",
CASE WHEN G.ENTITY_ID_NUMBER IS NOT NULL THEN G.APPEAL_SID ELSE A.APPEAL_SID END AS "APPEAL_SID",
CASE WHEN G.ENTITY_ID_NUMBER IS NOT NULL THEN G."Appeal Date" ELSE A."Appeal Date" END AS "Appeal Date",
G.TRANS_ID_NUMBER,
G."Gift Date",
G."Gift Amount",
CASE WHEN G.ENTITY_ID_NUMBER IS NOT NULL THEN G."Fiscal Year" ELSE TO_CHAR(A."Fiscal Year") END AS "Fiscal Year",
CASE WHEN FTD.ENTITY_ID_NUMBER IS NOT NULL THEN 1 ELSE 0 END AS "First Time Donor",
CASE WHEN RD.ENTITY_ID_NUMBER IS NOT NULL THEN 1 ELSE 0 END AS "Reactivated Donor"
FROM GIFTS G
LEFT OUTER JOIN FTD ON G.ENTITY_ID_NUMBER = FTD.ENTITY_ID_NUMBER
LEFT OUTER JOIN RD ON G.ENTITY_ID_NUMBER = RD.ENTITY_ID_NUMBER
LEFT OUTER JOIN APP_SENDS A ON G.ENTITY_ID_NUMBER = A.ID_NUMBER


--ORDER BY
--G.ENTITY_ID_NUMBER

;
